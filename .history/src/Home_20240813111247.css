.container {
    display: grid;
    width: 100%;
    height: 100vh;
    align-items: center;
    justify-content: center;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 5fr 15fr 15fr 5fr;
    grid-template-areas: 
        "nav nav nav nav"
        "banner banner banner banner"
        "head head head head"
        "content content content content"
        "footer footer footer footer";
}

nav {
    display: flex;
    grid-area: nav;
    background-color: #00a152;
    height: 100px;
    align-items: center;
    /* padding-left: 20px; */import React, { useState, useEffect } from 'react';
import './Home.css';
import Axios from 'axios';
import Recipe from './components/Recipe';
import Modal from './components/Modal'; 
import { v4 as uuidv4 } from 'uuid';
import Alert from './components/Alert';
import { Link } from 'react-router-dom'; // Import Link from React Router

function Home() {
  const [query, setQuery] = useState('');
  const [recipes, setRecipes] = useState([]);
  const [defaultRecipes, setDefaultRecipes] = useState([]); 
  const [showModal, setShowModal] = useState(false); 
  const [alert, setAlert] = useState('');
  const [currentUser, setCurrentUser] = useState(null);

  const APP_ID = "dcfe57f3";
  const APP_KEY = "395ac63c63efeb1a85786f06dd7cb113";

  const searchUrl = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=10&&health=alcohol-free`;
  const defaultUrl = `https://api.edamam.com/search?q=random&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=8`; 

  useEffect(() => {
    const fetchDefaultRecipes = async () => {
      const result = await Axios.get(defaultUrl);
      setDefaultRecipes(result.data.hits);
    };

    fetchDefaultRecipes();

    const user = JSON.parse(localStorage.getItem('currentUser'));
    if (user) {
      setCurrentUser(user);
    }
  }, []);

  const getData = async () => {
    if (query !== '') {
      const result = await Axios.get(searchUrl);

      if (!result.data.more) {
        return setAlert('Results not found');
      }

      setRecipes(result.data.hits);
      setAlert('');
      setShowModal(true);
      setQuery('');
    } else {
      setAlert('Search cannot be empty');
    }
  };

  const onSubmit = (event) => {
    event.preventDefault();
    getData();
  };

  const onChange = (e) => {
    setQuery(e.target.value);
  };

  const closeModal = () => {
    setShowModal(false);
  };

  const handleLogout = () => {
    localStorage.removeItem('currentUser');
    setCurrentUser(null);
  };

  return (
    <div className='container'>
      <nav>
        <div className='logo'><h1>HUNGRY?</h1></div>
        <ul>
          <li><Link to="/">Home</Link></li>
          <li><Link to="/breakfast">Breakfast</Link></li>
          <li><Link to="/lunch">Lunch time</Link></li>
          <li><Link to="/dinner">Supper/Dinner</Link></li>
          <li><Link to="/special-diet">Special diet</Link></li>
        </ul>
        <form className='searchform' onSubmit={onSubmit}>
          {alert !== '' && <Alert alert={alert} />}
          <input
            type='text'
            className='searchbox'
            placeholder='Search for your next favorite'
            onChange={onChange}
            value={query}
          />
          <button type='submit' className='button'>Search</button>
        </form>
        <div className='login'>
          {currentUser ? (
            <>
              <h4>Welcome, {currentUser.email}</h4>
              <button onClick={handleLogout} className='button'>Logout</button>
            </>
          ) : (
            <h4>
              <Link to="/login" className='button'>Login</Link> | 
              <Link to="/signup" className='button'>Signup</Link>
            </h4>
          )}
        </div>
      </nav>

      <div className='banner'>
        <div className='bnn'>
          <img src='banner.gif' alt='banner pic'></img>
        </div>
      </div>

      <div className='head'><h2>Discover Your Perfect Meal</h2></div>

      <div className='content'>
        <div className='recipes'>
          {defaultRecipes.map(recipe => (
            <Recipe key={uuidv4()} recipe={recipe} />
          ))}
        </div>
      </div>
      
      <Modal show={showModal} onClose={closeModal}>
        <div className='recipes'>
          {recipes.map(recipe => (
            <Recipe key={uuidv4()} recipe={recipe} />
          ))}
        </div>
      </Modal>

      <div className='footer'></div>
    </div>
  );
}

export default Home;

    /* padding-right: 20px; */
    justify-content:space-between
}

nav ul {
    list-style-type: none;
    display: flex;
    gap: 20px;
    font-size:large;
    color: white;
   
}




.banner {
    display: flex;
    grid-area: banner;
    margin-top: 40px;
    width: 100%;
    align-self: center;
    flex-wrap: wrap;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;
}

.bnn {
    width: 85%;
}


.banner img {
    width: 100%;
    height: 100%;
    object-fit:cover;
    box-sizing: border-box;
    align-self: center;
   
    
}

.head {
    display: flex;
    grid-area: head;
    justify-content: center;
}

.content {
    /* margin-top: 100px; */
    display: flex;
    flex-direction:row;
    grid-area: content;
    width: 100%;
    flex-wrap: wrap;
    /* justify-content:center; */
    /* align-items: center; */
}

.head h2 {
    color: #00a152;
    font-size: 2rem;
}

.cont {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 85%;
    
   
}

.footer {
    display: flex;
    /* border: 1px solid ; */
    grid-area: footer;
    height: 250px;
}

.logo {
    width: 10%;
}

.logo h1 {
    color: white;
    width: 100%;
}

.login {
    width: 10%;
}

.login h4 {
    color: white;
}

.searchform input {
    height: 35px;
    width: 200px;
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
    border: none;
}

.searchform button {
    height: 37px;
    width: 60px;
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px;
    border: none;
    background-color: #fcfcfc;
}

.recipes {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
    align-items: center;
    width: 100%;
}

.recipe {
    width: 300px;
    border: 1px solid #00a152;
    box-sizing: border-box;
    margin: 20px;
    text-align: center;
    border-radius: 8px;
   
   
}

.recipe img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
    margin-top: 10px;
    
}

.recipe h2 {
    color: #00a152;
    font-size: 1rem;
}

.recipe button {
    height: 30px;
    width: 100%;
    border-radius: 5px;
    border: none;
    background-color: #00a152;
    color: white;
    font-size: 1rem;
    
}

@media only screen and (max-width: 768px) {
    container {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr 1fr 1fr;
        grid-template-areas: 
            "nav"
            "banner"
            "head"
            "content"
            "footer";
    }

}
